# Generated by Django 5.2.5 on 2025-08-21 18:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('syndications', '0001_squashed_0016_data_migration'), ('syndications', '0017_alter_mastodonstatus_created_at_and_more'), ('syndications', '0018_delete_tweet_delete_twitteruser')]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='StravaWebhook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verify_token', models.CharField(max_length=32)),
                ('subscription_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StravaWebhookEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=16)),
                ('object_id', models.BigIntegerField()),
                ('aspect_type', models.CharField(max_length=12)),
                ('updates', models.TextField()),
                ('owner_id', models.BigIntegerField()),
                ('subscription_id', models.IntegerField()),
                ('event_time', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, null=True)),
                ('reply_to_url', models.URLField()),
                ('content', models.TextField()),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author_url', models.URLField(blank=True, null=True)),
                ('author_photo', models.URLField(blank=True, null=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('url', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MastodonReply',
            fields=[
                ('reply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndications.reply')),
                ('id_str', models.CharField(max_length=40)),
                ('in_reply_to_id_str', models.CharField(max_length=40)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('id_str',), name='unique_mastodon_id')],
            },
            bases=('syndications.reply',),
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repost_of_url', models.URLField()),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author_url', models.URLField(blank=True, null=True)),
                ('author_photo', models.URLField(blank=True, null=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('url', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MastodonBoost',
            fields=[
                ('repost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndications.repost')),
                ('account_id_str', models.CharField(max_length=40)),
                ('boost_of_id_str', models.CharField(max_length=40)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('account_id_str', 'boost_of_id_str'), name='unique_mastodon_account_id_str_boost_of_id_str')],
            },
            bases=('syndications.repost',),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_of_url', models.URLField()),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author_url', models.URLField(blank=True, null=True)),
                ('author_photo', models.URLField(blank=True, null=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('url', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MastodonFavourite',
            fields=[
                ('like_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndications.like')),
                ('account_id_str', models.CharField(max_length=40)),
                ('favourite_of_id_str', models.CharField(max_length=40)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('account_id_str', 'favourite_of_id_str'), name='unique_mastodon_account_id_str_favourite_of_id_str')],
            },
            bases=('syndications.like',),
        ),
        migrations.CreateModel(
            name='MastodonStatusesToProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_str', models.CharField(max_length=40)),
                ('result', models.TextField()),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('id_str',), name='unique_mastodon_id_str')],
            },
        ),
        migrations.CreateModel(
            name='MastodonPushSubscription',
            fields=[
                ('privkey', models.CharField(max_length=100)),
                ('auth', models.BinaryField()),
                ('foreign_id', models.IntegerField()),
                ('endpoint', models.URLField()),
                ('alerts', models.JSONField()),
                ('server_key', models.CharField(max_length=100)),
                ('policy', models.CharField(max_length=10)),
                ('singleton', models.CharField(default='X', max_length=1, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MastodonPush',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=50, null=True)),
                ('body', models.TextField(null=True)),
                ('icon', models.URLField(null=True)),
                ('notification_id', models.CharField(max_length=40, null=True)),
                ('notification_type', models.CharField(max_length=10, null=True)),
                ('preferred_local', models.CharField(max_length=100, null=True)),
                ('title', models.CharField(max_length=200, null=True)),
                ('result', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Syndication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MastodonStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_str', models.CharField(max_length=40)),
                ('url', models.CharField(max_length=2048)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField()),
                ('syndication', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='syndications.syndication')),
            ],
        ),
        migrations.CreateModel(
            name='StravaActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strava_id', models.BigIntegerField()),
                ('athlete', models.IntegerField()),
                ('distance', models.FloatField()),
                ('moving_time', models.IntegerField()),
                ('elapsed_time', models.IntegerField()),
                ('total_elevation_gain', models.FloatField()),
                ('type', models.CharField(max_length=30)),
                ('start_date', models.DateTimeField()),
                ('start_date_local', models.DateTimeField()),
                ('timezone', models.CharField(max_length=50)),
                ('private', models.BooleanField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('object_id', models.PositiveIntegerField()),
            ],
        ),
    ]
