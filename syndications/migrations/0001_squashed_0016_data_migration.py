# Generated by Django 4.2.18 on 2025-02-07 14:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# syndications.migrations.0016_data_migration

class Migration(migrations.Migration):

    replaces = [('syndications', '0001_initial'), ('syndications', '0002_auto_20200421_1116'), ('syndications', '0003_tweet_full_text'), ('syndications', '0004_auto_20200424_1530'), ('syndications', '0005_auto_20200428_0909'), ('syndications', '0006_auto_20200501_1532'), ('syndications', '0007_stravaactivity'), ('syndications', '0008_stravaactivity_description'), ('syndications', '0009_remove_stravaactivity_description'), ('syndications', '0010_auto_20200508_1033'), ('syndications', '0011_stravawebhook'), ('syndications', '0012_stravawebhookevent'), ('syndications', '0013_mastodonstatus'), ('syndications', '0001_mastodonstatus_content_type_mastodonstatus_object_id'), ('syndications', '0002_mastodonstatus_created_at'), ('syndications', '0003_alter_tweet_created_at'), ('syndications', '0004_reply_mastodonreply_mastodonreply_unique_mastodon_id'), ('syndications', '0005_alter_reply_published'), ('syndications', '0006_repost_mastodonboost_and_more'), ('syndications', '0007_like_mastodonfavourite_and_more'), ('syndications', '0008_like_updated_at_reply_updated_at_repost_updated_at'), ('syndications', '0009_mastodonstatusestoprocess_and_more'), ('syndications', '0010_like_created_at_reply_created_at_repost_created_at'), ('syndications', '0011_mastodonpushsubscription'), ('syndications', '0012_remove_mastodonpushsubscription_id_and_more'), ('syndications', '0013_mastodonnotification'), ('syndications', '0014_rename_mastodonnotification_mastodonpush'), ('syndications', '0015_syndication_mastodonstatus_syndication_and_more'), ('syndications', '0016_data_migration')]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='TwitterUser',
            fields=[
                ('id_str', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('screen_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='StravaActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strava_id', models.BigIntegerField()),
                ('athlete', models.IntegerField()),
                ('distance', models.FloatField()),
                ('moving_time', models.IntegerField()),
                ('elapsed_time', models.IntegerField()),
                ('total_elevation_gain', models.FloatField()),
                ('type', models.CharField(max_length=30)),
                ('start_date', models.DateTimeField()),
                ('start_date_local', models.DateTimeField()),
                ('timezone', models.CharField(max_length=50)),
                ('private', models.BooleanField()),
                ('content_type', models.ForeignKey(default=21, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('object_id', models.PositiveIntegerField(default=24559)),
            ],
        ),
        migrations.CreateModel(
            name='StravaWebhook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verify_token', models.CharField(max_length=32)),
                ('subscription_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StravaWebhookEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=16)),
                ('object_id', models.BigIntegerField()),
                ('aspect_type', models.CharField(max_length=12)),
                ('updates', models.TextField()),
                ('owner_id', models.BigIntegerField()),
                ('subscription_id', models.IntegerField()),
                ('event_time', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MastodonStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_str', models.CharField(max_length=40)),
                ('url', models.CharField(max_length=2048)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('object_id', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_str', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(null=True)),
                ('screen_name', models.CharField(max_length=30)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tweets', to='syndications.twitteruser')),
                ('full_text', models.CharField(max_length=560, null=True)),
                ('in_reply_to_screen_name', models.CharField(blank=True, max_length=100, null=True)),
                ('in_reply_to_status_id_str', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, null=True)),
                ('reply_to_url', models.URLField()),
                ('content', models.TextField()),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author_url', models.URLField(blank=True, null=True)),
                ('author_photo', models.URLField(blank=True, null=True)),
                ('published', models.DateField(blank=True, null=True)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MastodonReply',
            fields=[
                ('reply_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndications.reply')),
                ('id_str', models.CharField(max_length=40)),
                ('in_reply_to_id_str', models.CharField(max_length=40)),
            ],
            bases=('syndications.reply',),
        ),
        migrations.AddConstraint(
            model_name='mastodonreply',
            constraint=models.UniqueConstraint(fields=('id_str',), name='unique_mastodon_id'),
        ),
        migrations.AlterField(
            model_name='reply',
            name='published',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repost_of_url', models.URLField()),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author_url', models.URLField(blank=True, null=True)),
                ('author_photo', models.URLField(blank=True, null=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MastodonBoost',
            fields=[
                ('repost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndications.repost')),
                ('account_id_str', models.CharField(max_length=40)),
                ('boost_of_id_str', models.CharField(max_length=40)),
            ],
            bases=('syndications.repost',),
        ),
        migrations.AddConstraint(
            model_name='mastodonboost',
            constraint=models.UniqueConstraint(fields=('account_id_str', 'boost_of_id_str'), name='unique_mastodon_account_id_str_boost_of_id_str'),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_of_url', models.URLField()),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('author_url', models.URLField(blank=True, null=True)),
                ('author_photo', models.URLField(blank=True, null=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MastodonFavourite',
            fields=[
                ('like_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndications.like')),
                ('account_id_str', models.CharField(max_length=40)),
                ('favourite_of_id_str', models.CharField(max_length=40)),
            ],
            bases=('syndications.like',),
        ),
        migrations.AddConstraint(
            model_name='mastodonfavourite',
            constraint=models.UniqueConstraint(fields=('account_id_str', 'favourite_of_id_str'), name='unique_mastodon_account_id_str_favourite_of_id_str'),
        ),
        migrations.AddField(
            model_name='like',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='reply',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='repost',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='MastodonStatusesToProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_str', models.CharField(max_length=40)),
                ('result', models.TextField()),
            ],
        ),
        migrations.AddConstraint(
            model_name='mastodonstatusestoprocess',
            constraint=models.UniqueConstraint(fields=('id_str',), name='unique_mastodon_id_str'),
        ),
        migrations.AddField(
            model_name='like',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='reply',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='repost',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='MastodonPushSubscription',
            fields=[
                ('privkey', models.CharField(max_length=100)),
                ('auth', models.BinaryField()),
                ('foreign_id', models.IntegerField()),
                ('endpoint', models.URLField()),
                ('alerts', models.JSONField()),
                ('server_key', models.CharField(max_length=100)),
                ('policy', models.CharField(max_length=10)),
                ('singleton', models.CharField(default='X', max_length=1, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MastodonPush',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=50, null=True)),
                ('body', models.TextField(null=True)),
                ('icon', models.URLField(null=True)),
                ('notification_id', models.CharField(max_length=40, null=True)),
                ('notification_type', models.CharField(max_length=10, null=True)),
                ('preferred_local', models.CharField(max_length=100, null=True)),
                ('title', models.CharField(max_length=200, null=True)),
                ('result', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Syndication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('url', models.URLField()),
            ],
        ),
        migrations.AddField(
            model_name='mastodonstatus',
            name='syndication',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='syndications.syndication'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='syndication',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='syndications.syndication'),
        ),
    ]
